@page
@model EditConfigModel
<div id="main" class="main-content flex-1 bg-gray-100 mt-12 md:mt-2 pb-24 md:pb-5">
    <div class="bg-gray-800 pt-3">
        <div class="rounded-tl-3xl bg-gradient-to-r from-blue-900 to-gray-800 p-4 shadow text-2xl text-white">
            <h1 class="font-bold pl-2">Configuration for @Model.TypeOfConfig</h1>
        </div>
    </div>

    <div class="card bg-base-100 shadow-xl m-10">
        <div class="card-body">
            @if (!string.IsNullOrWhiteSpace(Model.Message))
            {
                <div class="alert alert-success shadow-lg m-5">
                    <div>
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-info-content flex-shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
                        <span>@Model.Message</span>
                    </div>
                </div>
            }
            <form class="container mx-auto" method="post">
                <p>
                    Enter urls to scrape from @Model.TypeOfConfig
                </p>
                <br />
                @for (var i = 0; i < Model.ConfigItems.Length; i++)
                {
                    var item = Model.ConfigItems[i];

                    <fieldset class="flex mb-3">
                        <input type="text" value="@item" class="input input-bordered w-full" name="field-@i" />
                        <kbd href="#" class="kbd remove click">-</kbd>
                        <br />
                    </fieldset>

                }
                <fieldset class="flex mb-3">
                    <input type="text" value="" class="input input-bordered w-full" name="field-@(Model.ConfigItems.Length)" />
                    <kbd href="#" class="kbd add click">+</kbd>
                    <br />
                </fieldset>
                <input type="submit" value="Save" class="btn" />
                <a href="/" class="btn btn-ghost">cancel</a>
            </form>
            <script>
            var maxItem = @(Model.ConfigItems.Length);
            var items = document.querySelectorAll('.remove');
            [...items].forEach(x => x.addEventListener("click", (e) => {
                e.path[1].remove();
                e.preventDefault();
                return false;
            }));
            document.querySelector('.add').addEventListener('click', (e) => {
                maxItem++;
                e.path[1].insertAdjacentHTML("beforebegin", `<fieldset class="flex mb-3">
                <input type="text" value="" class="input input-bordered w-full" name="field-${maxItem}" />
                <br />
            </fieldset>`)
            });
            </script>
        </div>
    </div>
</div>